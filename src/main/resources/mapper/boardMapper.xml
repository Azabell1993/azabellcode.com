<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.azabellcode.start.mapper.BoardMapper">
    <!-- 게시글 조회 쿼리 -->
    <select id="findBoardList" parameterType="map" resultType="com.azabellcode.start.dto.BoardDto">
        WITH RECURSIVE CTE AS (
            -- 최상위 게시글 가져오기
            SELECT 
                board_idx,
                title,
                contents,
                creater_id,
                parent_idx,
                depth,
                created_datetime,
                hit_cnt,
                board_idx AS root_board_idx -- 그룹화를 위해 최상위 게시글의 ID 유지
            FROM 
                board
            WHERE 
                parent_idx IS NULL -- 최상위 게시글
                AND delete_yn = 'N'
            UNION ALL
            -- 답글 가져오기
            SELECT 
                b.board_idx,
                b.title,
                b.contents,
                b.creater_id,
                b.parent_idx,
                c.depth + 1 AS depth, -- 부모의 depth + 1
                b.created_datetime,
                b.hit_cnt,
                c.root_board_idx -- 상위 게시글의 root ID 유지
            FROM 
                board b
            INNER JOIN CTE c
            ON b.parent_idx = c.board_idx -- 부모-자식 관계 연결
            WHERE 
                b.delete_yn = 'N'
        )
        SELECT 
            board_idx,
            title,
            contents,
            creater_id,
            parent_idx,
            depth,
            DATE_FORMAT(created_datetime, '%Y.%m.%d %H:%i:%s') AS created_datetime,
            hit_cnt
        FROM CTE
        ORDER BY 
            -- 최상위 게시글의 작성일 기준 최신순
            (SELECT created_datetime FROM board WHERE board_idx = root_board_idx) DESC,
            -- 부모 기준 정렬
            root_board_idx ASC,
            -- 깊이 기준 정렬
            depth ASC,
            -- 동일 depth 내에서 작성일 기준 정렬
            created_datetime ASC
        LIMIT #{offset}, #{pageSize}; -- 페이징 처리
    </select>


    <select id="countAllBoards" resultType="int">
        SELECT COUNT(*)
        FROM board
    </select>

    <!-- 게시글 목록 조회 -->
    <select id="selectBoardList" resultType="com.azabellcode.start.dto.BoardDto">
        <![CDATA[
            SELECT
                board_idx,
                title,
                contents,
                creater_id,
                DATE_FORMAT(created_datetime, '%Y.%m.%d %H:%i:%s') AS created_datetime,
                hit_cnt,
                parent_idx
            FROM
                board
            WHERE
                delete_yn = 'N'
            ORDER BY
                CASE 
                    WHEN parent_idx IS NULL THEN board_idx -- 부모 게시글 기준
                    ELSE parent_idx -- 답글은 부모 게시글 기준
                END DESC, -- 최신 부모 게시글부터 정렬
                parent_idx IS NOT NULL, -- 답글은 부모 게시글 다음에 정렬
                created_datetime ASC -- 답글은 작성 시간순으로 정렬
        ]]>
    </select>


    <!-- 게시글 작성 -->
    <insert id="insertBoard" parameterType="com.azabellcode.start.dto.BoardDto">
        <![CDATA[
            INSERT INTO board (
                title,
                contents,
                creater_id,
                password,
                created_datetime
            ) VALUES (
                #{title},
                #{contents},
                #{createrId},
                #{password},
                NOW()
            )
        ]]>
    </insert>

    <!-- 게시글 상세 조회 -->
    <select id="selectBoardDetail" parameterType="int" resultType="com.azabellcode.start.dto.BoardDto">
        SELECT
            board_idx,
            title,
            contents,
            creater_id,
            password,
            DATE_FORMAT(created_datetime, '%Y.%m.%d %H:%i:%s') AS created_datetime,
            hit_cnt,
            parent_idx
        FROM
            board
        WHERE
            board_idx = #{boardIdx}
            AND delete_yn = 'N'
    </select>


    <!-- 게시글 삭제 -->
    <delete id="deleteBoard" parameterType="int">
        <![CDATA[
            DELETE FROM board
            WHERE board_idx = #{boardIdx}
        ]]>
    </delete>

    <!-- 조회수 증가 -->
    <update id="increaseHitCnt" parameterType="int">
        <![CDATA[
            UPDATE board
            SET hit_cnt = hit_cnt + 1
            WHERE board_idx = #{boardIdx}
        ]]>
    </update>

    <!-- 답글 작성 -->
    <insert id="insertReply" parameterType="com.azabellcode.start.dto.BoardDto">
        <![CDATA[
            INSERT INTO board (
                title,
                contents,
                creater_id,
                password,
                created_datetime,
                parent_idx,
                depth
            ) VALUES (
                #{title},
                #{contents},
                #{createrId},
                #{password},
                NOW(),
                #{parentIdx},
                (SELECT tmp.depth + 1 FROM (SELECT depth FROM board WHERE board_idx = #{parentIdx}) AS tmp)
            )
        ]]>
    </insert>

</mapper>
