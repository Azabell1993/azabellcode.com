1) my_ulonglong mysql_affected_rows(MYSQL* mysql)                                           INSERT, UPDATE, DELETE 등의 query로 영향을 받은 ROW의 수를 리턴한다. 
2) void mysql_close(MYSQL* mysql)                                                           서버와의 연결을 종료한다. 
3) void mysql_data_seek(MYSQL_RES* result, unsigned int offset)                             result에서 임의의 ROW에 접근을 하도록 하는 함수이다. offset이 row의 번호를  나타낸다. 0이면 처음 ROW, mysql_num_rows( result ) - 1 은 마지막 row를 나타낸다. 
4) unsigned int mysql_errno(MYSQL* mysql)                                                   가장 최근에 mysql에 일어난 에러의 번호를 리턴한다. 
5) char* mysql_error(MYSQL* mysql)                                                          가장 최근에 일어난 에러 메시지를 리턴한다. 
6) MYSQL_FIELD* mysql_fetch_field(MYSQL_RES* result)                                        한 번 호출할 때마다 한 나의 필드에 대한 정보를 리턴한다. 
7) MYSQL_FIELDS* mysql_fetch_fields(MYSQL_RES* result)                                      배열 형대로 result의 필드에 대한 정보를 한꺼번에 리턴한다. 
8) MYSQL_FIELD_OFFSET mysql_field_seek(MYSQL* mysql, MYSQL_FIELD_OFFSET offset)             임의의 필드에 접근을 하도록 한다. 
9) MYSQL_FIELD_OFFSET mysql_field_tell(MYSQL_RES* result)                                   현재 필드의 offset을 리턴한다. 
10) void mysql_free_result(MYSQL_RES* result)                                               result에 할당된 메모리를 해제한다. 
11) MYSQL* mysql_init(MYSQL* mysql)                                                         mysql 객체를 초기화 한다. 인자가 NULL이면 새로운 MYSQL 객체를 생성하고, 초기화 하여 리턴한다. 
12) MYSQL_RES* mysql_list_dbs(MYSQL* mysql, const char* wild)                               현재 서버에 있는 데이타베이스의 목록을 리턴한다. wild는 MySQL에서 사용할 수 있는 정규식을 나타낸다. result = mysql_list_dbs( &mysql,"%" )는 모든 데이타베이스를 리턴하는 YES이다.(%는 '모든'을 나타낸다) 
13) MYSQL_RES* mysql_list_tables(MYSQL* mysql, const char* wild)                            현재 데이타베이스에 있는 테이블들의 목록을 리턴한다. 
14) unsigned int mysql_num_fields(MYSQL_RES*result)                                         혹은 unsigned int mysql_num_fields(MYSQL* mysql) 필드의 수를 리턴한다. 
15) my_ulonglong mysql_num_rows(MYSQL_RES* result)                                          result에 총 몇 개의 ROW가 있는지 리턴한다. query 수행 후  mysql_store_result()를 호출하였을 경우에만 사용할 수 있고, mysql_use_result()는 사용할 수 없다. 
16) int mysql_ping(MYSQL* mysql)                                                            서버에 연결 중인지를 리턴한다. 연결이 끊어 졌을 경우, 다시 연결을 시도한다. 서버와 연결을 한 후 오랫동안 가만히 있으면 서버가 연결을 끊어버리는데, 이런 경우에 사용한다. 
17) int mysql_query(MYSQL* mysql, const char* query)                                        query가 포인트 하는 쿼리를 수행한다. query의 끝은 NULL 문자이다. 성공적으로 query를 수행하였으면 0을 리턴한다. 
18) MYSQL* mysql_real_connect(MYSQL* mysql, const char* host, const char* user              host와의 연결을 시도한다. 
                            , const char* passwd, const char* db, uint port
                            , const char* unix_socket, unit client_flag ) 
19) int mysql_real_query(MYSQL* mysql, const char* query, unsigned int length)              mysql_query()처럼 query를 수행하나, query의 끝이 legnth인 것이 다르다. 
20) MYSQL_ROW_OFFSET mysql_row_tell(MYSQL_RES* result)                                      현재 ROW의 offset을 리턴한다. 
21) int mysql_select_db(MYSQL* mysql, const char* db)                                       사용하고자 하는 database를 변경한다. mysql_query()를 이용하여 "use db이름"의 query를 수행해도 같은 결과를 얻는다. 
22) int mysql_shutdown(MYSQL* mysql)                                                        서버를 종료시킨다. 현재 사용자에게 shutdown 권한이 있어야 한다. 
23) MYSQL_RES* mysql_store_result(MYSQL* mysql)                                             query의 수행 결과를 서버로부터 한 번에 모두 받아 온다. 
24) MYSQL_RES* mysql_use_result(MYSQL* mysql)                                               query의 수행 결과를 서버로부터 한 개의 ROW 씩 받아 온다. 
    
MY_BOOL mysql_commit(MYSQL *mysql)
    The action of this function is subject to the value of the completion_type system variable. In particular, 
    if the value of completion_type is RELEASE (or 2), the server performs a release after terminating a transaction and closes the client connection. 
    Call mysql_close()                                          from the client program to close the connection from the client side. 


my_bool mysql_rollback(MYSQL *mysql)
     The action of this function is subject to the value of the completion_type system variable. In particular, 
     if the value of completion_type is RELEASE (or 2), the server performs a release after terminating a transaction and closes the client connection. 
     Call mysql_close()                                          from the client program to close the connection from the client side.

=======================================================================================================================================================================
Name 	                                       || Description 	                                                       Deprecated
=======================================================================================================================================================================
my_init()                                       클라이언트 라이브러리 전역 변수 초기화
mysql_affected_rows()                           마지막 UPDATE, DELETE 또는 INSERT 문에 의해 변경/삭제/삽입된 행 수
mysql_autocommit()                              자동 커밋 모드 설정
mysql_change_user()                             열린 연결에서 사용자 및 데이터베이스 변경
mysql_character_set_name()                      현재 연결에 대한 기본 문자 집합 이름
mysql_client_find_plugin()                      플러그인에 대한 포인터 반환
mysql_client_register_plugin()                  플러그인 등록
mysql_close()                                   서버와의 연결 종료
mysql_commit()                                  커밋 트랜잭션
mysql_connect()                                 MySQL 서버에 연결                                                              YES
mysql_create_db()                               데이터베이스 생성                                                               YES
mysql_data_seek()                               쿼리 결과 집합에서 임의의 행 번호를 찾습니다.
mysql_debug()                                   주어진 문자열로 DBUG_PUSH 수행
mysql_drop_db()                                 데이터베이스 삭제                                                               YES
mysql_dump_debug_info()                         서버가 오류 로그에 디버그 정보를 기록하게 함
mysql_eof()                                     결과 집합의 마지막 행을 읽었는지 확인                                               YES
mysql_errno()                                   가장 최근에 호출된 MySQL 함수의 오류 번호
mysql_error()                                   가장 최근에 호출된 MySQL 함수에 대한 오류 메시지
mysql_escape_string()                           SQL 문에서 사용하기 위해 문자열의 이스케이프 특수 문자
mysql_fetch_field()                             다음 테이블 필드의 유형
mysql_fetch_field_direct()                      주어진 필드 번호에 대한 테이블 필드 유형
mysql_fetch_fields()                            모든 필드 구조의 배열 반환
mysql_fetch_lengths()                           현재 행의 모든 열 길이 반환
mysql_fetch_row()                               다음 결과 집합 행 가져오기
mysql_field_count()                             가장 최근 명령문의 결과 열 수
mysql_field_seek()                              결과 집합 행 내에서 열 찾기
mysql_field_tell()                              마지막 mysql_fetch_field() 호출에 대한 필드 위치
mysql_free_result()                             결과 세트 메모리 해제
mysql_get_character_set_info()                  기본 문자 집합에 대한 정보
mysql_get_client_info()                         클라이언트 버전(문자열)
mysql_get_client_version()                      클라이언트 버전(정수)
mysql_get_host_info()                           연결에 대한 정보
mysql_get_option()                              옵션의 값
mysql_get_proto_info()                          연결에 사용된 프로토콜 버전
mysql_get_server_info()                         서버 버전 번호(문자열)
mysql_get_server_version()                      서버 버전 번호(정수)
mysql_get_ssl_cipher()                          현재 SSL 암호
mysql_hex_string()                              16진수 형식으로 문자열 인코딩
mysql_info()                                    가장 최근에 실행된 문장에 대한 정보
mysql_init()                                    MYSQL 구조 가져오기 또는 초기화
mysql_insert_id()                               이전 명령문에 의해 AUTO_INCREMENT 열에 대해 생성된 ID
mysql_kill()                                    스레드 종료                                                                    YES
mysql_library_end()                             MySQL C API 라이브러리 마무리
mysql_library_init()                            MySQL C API 라이브러리 초기화
mysql_list_dbs()                                정규 표현식과 일치하는 데이터베이스 이름 반환
mysql_list_fields()                             정규 표현식과 일치하는 필드 이름 반환
mysql_list_processes()                          현재 서버 스레드 목록
mysql_list_tables()                             정규 표현식과 일치하는 테이블 이름 반환
mysql_load_plugin()                             플러그인 로드
mysql_load_plugin_v()                           플러그인 로드
mysql_more_results()                            더 많은 결과가 있는지 확인
mysql_next_result()                             다중 결과 실행에서 다음 결과 반환/초기화
mysql_num_fields()                              결과 집합의 열 수
mysql_num_rows()                                결과 집합의 행 수
mysql_options()                                 연결 전 옵션 설정
mysql_options4()                                연결 전 옵션 설정
mysql_ping()                                    핑 서버
mysql_plugin_options()                          플러그인 옵션 설정
mysql_query()                                   문 실행
mysql_real_connect()                            MySQL 서버에 접속
mysql_real_escape_string()                      명령문 문자열의 특수 문자 인코딩
mysql_real_escape_string_quote()                인용 문맥을 설명하는 명령문 문자열의 특수 문자를 인코딩합니다.
mysql_real_query()                              문 실행
mysql_refresh()                                 테이블 및 캐시 플러시 또는 재설정
mysql_reload()                                  승인 테이블 다시 로드                                                               YES
mysql_reset_connection()                        세션 상태를 지우기 위해 연결 재설정
mysql_rollback()                                롤백 트랜잭션
mysql_row_seek()                                결과 집합에서 행 오프셋 찾기
mysql_row_tell()                                결과 집합 행 내 현재 위치
mysql_select_db()                               데이터베이스 선택
mysql_server_end()                              MySQL C API 라이브러리 마무리
mysql_server_init()                             MySQL C API 라이브러리 초기화
mysql_session_track_get_first()                 세션 상태 변경 정보의 첫 부분
mysql_session_track_get_next()                  세션 상태 변경 정보의 다음 부분
mysql_set_character_set()                       현재 연결 기본 문자 집합 설정
mysql_set_local_infile_default()                LOAD DATA LOCAL 핸들러 콜백을 기본값으로 설정
mysql_set_local_infile_handler()                애플리케이션별 LOAD DATA LOCAL 핸들러 콜백 설치
mysql_set_server_option()                       현재 연결에 대한 옵션 설정
mysql_shutdown()                                MySQL 서버 종료
mysql_sqlstate()                                가장 최근에 호출된 MySQL 함수에 대한 SQLSTATE 값
mysql_ssl_set()                                 서버에 대한 SSL 연결 설정 준비
mysql_stat()                                    서버 상태
mysql_stmt_affected_rows()                      마지막으로 준비된 U에 의해 변경/삭제/삽입된 행 수